{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_airnode",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "airnode",
      "outputs": [
        {
          "internalType": "contract IAirnode",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "providerId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "endpointId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "requesterInd",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "designatedWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        }
      ],
      "name": "checkAuthorizationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "providerId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "requestIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "endpointIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "requesterInds",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "designatedWallets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "clientAddresses",
          "type": "address[]"
        }
      ],
      "name": "checkAuthorizationStatuses",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "statuses",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "providerId",
          "type": "bytes32"
        }
      ],
      "name": "getProviderAndBlockNumber",
      "outputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "xpub",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "templateIds",
          "type": "bytes32[]"
        }
      ],
      "name": "getTemplates",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "providerIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "endpointIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "requesterInds",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "designatedWallets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "fulfillAddresses",
          "type": "address[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "fulfillFunctionIds",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes[]",
          "name": "parameters",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "receipt": {
    "to": null,
    "from": "0x1Da10cDEc44538E1854791b8e71FA4Ef05b4b238",
    "contractAddress": "0xB5Edd78ED86b7043D212391f5A6d84cd40111be7",
    "transactionIndex": 9,
    "gasUsed": "1535629",
    "logsBloom": "0x
    "blockHash": "0x0e2a084cd62cdb83d7201a507269c11040902ed0bd9de0052a4b6fc3bbb37955",
    "transactionHash": "0xd5108bc0fbb4093b9527c3bb5335166db243f3b297894a27f4f9909b1d1b61be",
    "logs": [],
    "blockNumber": 7694392,
    "cumulativeGasUsed": "2414259",
    "status": 1,
    "byzantium": true
  },
  "address": "0xB5Edd78ED86b7043D212391f5A6d84cd40111be7",
  "args": [
    "0xf8f2f4a8317947B6037186e5aC87D015bcD756C1"
  ],
  "solcInputHash": "0x0263a268c4a881721557a0fe95b774e6fc825a023fbe13a3dbec70426f3126fa",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_airnode\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"airnode\",\"outputs\":[{\"internalType\":\"contract IAirnode\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"providerId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"endpointId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requesterInd\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"designatedWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"}],\"name\":\"checkAuthorizationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"providerId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"requestIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"endpointIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"requesterInds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"designatedWallets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"clientAddresses\",\"type\":\"address[]\"}],\"name\":\"checkAuthorizationStatuses\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"providerId\",\"type\":\"bytes32\"}],\"name\":\"getProviderAndBlockNumber\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"xpub\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"templateIds\",\"type\":\"bytes32[]\"}],\"name\":\"getTemplates\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"providerIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"endpointIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"requesterInds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"designatedWallets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"fulfillAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"fulfillFunctionIds\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes[]\",\"name\":\"parameters\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkAuthorizationStatus(bytes32,bytes32,bytes32,uint256,address,address)\":{\"details\":\"Authorizer contracts are not trusted, so this method should only be called off-chain. The elements of the authorizer array are either addresses of Authorizer contracts with the interface defined in IAuthorizer or 0. Say we have authorizer contracts X, Y, Z, T, and our authorizer array is [X, Y, 0, Z, T]. This means that the requester should satisfy (X AND Y) OR (Z AND T) to be considered authorized. In other words, consequent authorizer contracts need to verify authorization simultaneously, while 0 represents the start of an independent authorization policy. From a logical standpoint, consequent authorizers get ANDed while 0 acts as an OR gate, providing great flexibility in forming an authorization policy out of simple building blocks. We could also define a NOT gate here to achieve a full set of universal logic gates, but that does not make much sense in this context because authorizers tend to check for positive conditions (have paid, is whitelisted, etc.) and we would not need policies that require these to be false. Note that authorizers should not start or end with 0, and 0s should not be used consecutively (e.g., [X, Y, 0, 0, Z, T]). [] returns false (deny everyone), [0] returns true (accept everyone).\",\"params\":{\"clientAddress\":\"Client address\",\"designatedWallet\":\"Designated wallet\",\"endpointId\":\"Endpoint ID from EndpointStore\",\"providerId\":\"Provider ID from ProviderStore\",\"requestId\":\"Request ID\",\"requesterInd\":\"Requester index from RequesterStore\"},\"returns\":{\"status\":\"Authorization status of the request\"}},\"checkAuthorizationStatuses(bytes32,bytes32[],bytes32[],uint256[],address[],address[])\":{\"params\":{\"clientAddresses\":\"Client addresses\",\"designatedWallets\":\"Designated wallets\",\"endpointIds\":\"Endpoint IDs from EndpointStore\",\"providerId\":\"Provider ID from ProviderStore\",\"requestIds\":\"Request IDs\",\"requesterInds\":\"Requester indices from RequesterStore\"},\"returns\":{\"statuses\":\"Authorization statuses of the request\"}},\"getProviderAndBlockNumber(bytes32)\":{\"params\":{\"providerId\":\"Provider ID\"},\"returns\":{\"admin\":\"Provider admin\",\"blockNumber\":\"Block number\",\"xpub\":\"Master public key of the provider node\"}},\"getTemplates(bytes32[])\":{\"params\":{\"templateIds\":\"Request template IDs\"},\"returns\":{\"designatedWallets\":\"Designated wallets that are requested to fulfill the request\",\"endpointIds\":\"Endpoint IDs from EndpointStore\",\"fulfillAddresses\":\"Addresses that will be called to fulfill\",\"fulfillFunctionIds\":\"Signatures of the functions that will be called to fulfill\",\"parameters\":\"Array of static request parameters (i.e., parameters that will not change between requests, unlike the dynamic parameters determined at runtime)\",\"providerIds\":\"Provider IDs from ProviderStore\",\"requesterInds\":\"Requester indices from RequesterStore\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkAuthorizationStatus(bytes32,bytes32,bytes32,uint256,address,address)\":{\"notice\":\"Uses the authorizer contracts of an endpoint of a provider to decide if a client contract is authorized to call the endpoint. Once an oracle node receives a request, it calls this method to determine if it should respond. Similarly, third parties can use this method to determine if a client contract is authorized to call an endpoint.\"},\"checkAuthorizationStatuses(bytes32,bytes32[],bytes32[],uint256[],address[],address[])\":{\"notice\":\"A convenience function to make multiple authorization status checks with a single call\"},\"getProviderAndBlockNumber(bytes32)\":{\"notice\":\"A convenience function to retrieve provider parameters and the block number with a single call\"},\"getTemplates(bytes32[])\":{\"notice\":\"A convenience function to retrieve multiple templates with a single call\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Convenience.sol\":\"Convenience\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Convenience.sol\":{\"keccak256\":\"0x287a8b885ae4d630b90de642874a6994a3a8e1ab018fc6b5c9019e1ae9653d58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f29d045a3d5c7dc19bb67c831e39c20c1f610fd3f8c54537c2502097a284f65\",\"dweb:/ipfs/QmeXnMANezYRsmdmthGrATVafQgwRBV69ZnY2XNtFJDW99\"]},\"contracts/authorizers/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0xd85dbf9f66532eb3398a92273b9c2c409dc39935b364fc7a84a5cf167f77a52b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6e04c853ae340d470e5287449679d8d82600bb4b996a088d72ab4c68b8a67b8\",\"dweb:/ipfs/QmdJZ7ExEzjDbaeKkpNwsMgQz7E51vNnhGXXoRg78YV39M\"]},\"contracts/interfaces/IAirnode.sol\":{\"keccak256\":\"0x0af7d962813ceb7c8f948cfb8b57475f875911362fe7e62523bfbabaa5fa03b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67414cac735410ed16c54873b3ad05ed3c12b0ee44b510365b61c4855a708cc6\",\"dweb:/ipfs/QmSeE9Gu8NcDxnw1zt7p9tD2QKJj1UCyYws8ZtyzwJubGR\"]},\"contracts/interfaces/IConvenience.sol\":{\"keccak256\":\"0xe4fd396a1b43f73af733bc7f60c11bdb60af5fd91249fc46c058eda3a93bb488\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d93ec08533ee800fe6ac9a1e6d5b600ad951979daf4bef3a9123943d2b95e81\",\"dweb:/ipfs/QmVYEoDnnHe3fZbnGQXorPwwRz6UrR7hLyPBKHWFCJA44s\"]},\"contracts/interfaces/IEndpointStore.sol\":{\"keccak256\":\"0x05f163e0438d1b0e149e85a01b57adfe8ca1bbd6383aa9995f28974b3c160d92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122386337ba93866c7ebf404f6ddcdd78790503c4e4bb83503014f5bed0b684b\",\"dweb:/ipfs/QmPtitZDb8jiEd96RWWr2QmzrxkFVVGJ7qPDekh5nVyChg\"]},\"contracts/interfaces/IProviderStore.sol\":{\"keccak256\":\"0x66d8f062f8211707febb5d7e5da0f20b3e989c2de0c0bdd1b5963f56ca2a0929\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e955e0bd3d95ad050f7c102e1ff0966c051916e1d0fa10ec74f9874a4a40a52\",\"dweb:/ipfs/QmZ87GSA3Cvyf4fTKp4UNW8VLrRq25dY1j51YzRNyMcr8Q\"]},\"contracts/interfaces/IRequesterStore.sol\":{\"keccak256\":\"0xf1ec5f454805e95233661adeff5e87e9d3ba68f50a180a056aa9a9980b4bc6c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ecee12daec1bb4a286b57f976aafc47e65b66373502e73f97f76188e51922d\",\"dweb:/ipfs/QmXY8QccTQQnqZXca5Jt2x97D4PgwJdR3i5uVbBKxt4UaG\"]},\"contracts/interfaces/ITemplateStore.sol\":{\"keccak256\":\"0x01bce1eb62e15c4a58f530b6cf9a850fb09232bb95bdd05529a34a418804b600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f81edfb0fb521cde9f8387d7f8d08cc5987780522ef60787da70204cc5b83793\",\"dweb:/ipfs/Qma4MSF6mMNaBXqFUgRkRpsoSn3B2rMgBqdvYvtZNjDYiV\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b8238038062001b82833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b611a63806200011f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806376428c9b1461005c578063824240d114610092578063a36ff4d8146100c4578063ccd76101146100e2578063d760710614610112575b600080fd5b61007660048036038101906100719190610d90565b610142565b60405161008997969594939291906114fe565b60405180910390f35b6100ac60048036038101906100a79190610dfe565b61058b565b6040516100bb9392919061149e565b60405180910390f35b6100cc610652565b6040516100d9919061165e565b60405180910390f35b6100fc60048036038101906100f79190610f40565b610676565b604051610109919061159e565b60405180910390f35b61012c60048036038101906101279190610e27565b61088b565b60405161013991906114dc565b60405180910390f35b60608060608060608060608888905067ffffffffffffffff8111801561016757600080fd5b506040519080825280602002602001820160405280156101965781602001602082028036833780820191505090505b5096508888905067ffffffffffffffff811180156101b357600080fd5b506040519080825280602002602001820160405280156101e25781602001602082028036833780820191505090505b5095508888905067ffffffffffffffff811180156101ff57600080fd5b5060405190808252806020026020018201604052801561022e5781602001602082028036833780820191505090505b5094508888905067ffffffffffffffff8111801561024b57600080fd5b5060405190808252806020026020018201604052801561027a5781602001602082028036833780820191505090505b5093508888905067ffffffffffffffff8111801561029757600080fd5b506040519080825280602002602001820160405280156102c65781602001602082028036833780820191505090505b5092508888905067ffffffffffffffff811180156102e357600080fd5b506040519080825280602002602001820160405280156103125781602001602082028036833780820191505090505b5091508888905067ffffffffffffffff8111801561032f57600080fd5b5060405190808252806020026020018201604052801561036357816020015b606081526020019060019003908161034e5790505b50905060005b8989905081101561057e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639757739b8b8b848181106103bc57fe5b905060200201356040518263ffffffff1660e01b81526004016103df91906115b9565b60006040518083038186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104349190610fc9565b8e888151811061044057fe5b602002602001018e898151811061045357fe5b602002602001018e8a8151811061046657fe5b602002602001018e8b8151811061047957fe5b602002602001018e8c8151811061048c57fe5b602002602001018e8d8151811061049f57fe5b602002602001018e8e815181106104b257fe5b60200260200101879052877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250878152508781525087815250505050505050508080600101915050610369565b5092959891949750929550565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166333c0950a856040518263ffffffff1660e01b81526004016105eb91906115b9565b60006040518083038186803b15801561060357600080fd5b505afa158015610617573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106409190610cfb565b80935081945050504390509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dfd22ded89886040518363ffffffff1660e01b81526004016106d59291906115d4565b60006040518083038186803b1580156106ed57600080fd5b505afa158015610701573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061072a9190610d4f565b9050600081519050600081141561074657600092505050610881565b60006001905060005b8281101561087957600084828151811061076557fe5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c15782156107b857600195505050505050610881565b6001925061086b565b821561086a5760008190508073ffffffffffffffffffffffffffffffffffffffff16639bb014288d8f8e8e8e8e6040518763ffffffff1660e01b815260040161080f969594939291906115fd565b60206040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610dd5565b61086857600093505b505b5b50808060010191505061074f565b508093505050505b9695505050505050565b6060888890508b8b90501480156108a75750868690508b8b9050145b80156108b85750848490508b8b9050145b80156108c95750828290508b8b9050145b610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611679565b60405180910390fd5b8a8a905067ffffffffffffffff8111801561092257600080fd5b506040519080825280602002602001820160405280156109515781602001602082028036833780820191505090505b50905060005b8b8b9050811015610a11576109e68d8d8d8481811061097257fe5b905060200201358c8c8581811061098557fe5b905060200201358b8b8681811061099857fe5b905060200201358a8a878181106109ab57fe5b90506020020160208101906109c09190610cd2565b8989888181106109cc57fe5b90506020020160208101906109e19190610cd2565b610676565b8282815181106109f257fe5b6020026020010190151590811515815250508080600101915050610957565b509b9a5050505050505050505050565b600081359050610a30816119ba565b92915050565b600081519050610a45816119ba565b92915050565b60008083601f840112610a5d57600080fd5b8235905067ffffffffffffffff811115610a7657600080fd5b602083019150836020820283011115610a8e57600080fd5b9250929050565b600082601f830112610aa657600080fd5b8151610ab9610ab4826116c6565b611699565b91508181835260208401935060208101905083856020840282011115610ade57600080fd5b60005b83811015610b0e5781610af48882610a36565b845260208401935060208301925050600181019050610ae1565b5050505092915050565b60008083601f840112610b2a57600080fd5b8235905067ffffffffffffffff811115610b4357600080fd5b602083019150836020820283011115610b5b57600080fd5b9250929050565b60008083601f840112610b7457600080fd5b8235905067ffffffffffffffff811115610b8d57600080fd5b602083019150836020820283011115610ba557600080fd5b9250929050565b600081519050610bbb816119d1565b92915050565b600081359050610bd0816119e8565b92915050565b600081519050610be5816119e8565b92915050565b600081519050610bfa816119ff565b92915050565b600082601f830112610c1157600080fd5b8151610c24610c1f826116ee565b611699565b91508082526020830160208301858383011115610c4057600080fd5b610c4b838284611976565b50505092915050565b600082601f830112610c6557600080fd5b8151610c78610c738261171a565b611699565b91508082526020830160208301858383011115610c9457600080fd5b610c9f838284611976565b50505092915050565b600081359050610cb781611a16565b92915050565b600081519050610ccc81611a16565b92915050565b600060208284031215610ce457600080fd5b6000610cf284828501610a21565b91505092915050565b60008060408385031215610d0e57600080fd5b6000610d1c85828601610a36565b925050602083015167ffffffffffffffff811115610d3957600080fd5b610d4585828601610c54565b9150509250929050565b600060208284031215610d6157600080fd5b600082015167ffffffffffffffff811115610d7b57600080fd5b610d8784828501610a95565b91505092915050565b60008060208385031215610da357600080fd5b600083013567ffffffffffffffff811115610dbd57600080fd5b610dc985828601610b18565b92509250509250929050565b600060208284031215610de757600080fd5b6000610df584828501610bac565b91505092915050565b600060208284031215610e1057600080fd5b6000610e1e84828501610bc1565b91505092915050565b600080600080600080600080600080600060c08c8e031215610e4857600080fd5b6000610e568e828f01610bc1565b9b505060208c013567ffffffffffffffff811115610e7357600080fd5b610e7f8e828f01610b18565b9a509a505060408c013567ffffffffffffffff811115610e9e57600080fd5b610eaa8e828f01610b18565b985098505060608c013567ffffffffffffffff811115610ec957600080fd5b610ed58e828f01610b62565b965096505060808c013567ffffffffffffffff811115610ef457600080fd5b610f008e828f01610a4b565b945094505060a08c013567ffffffffffffffff811115610f1f57600080fd5b610f2b8e828f01610a4b565b92509250509295989b509295989b9093969950565b60008060008060008060c08789031215610f5957600080fd5b6000610f6789828a01610bc1565b9650506020610f7889828a01610bc1565b9550506040610f8989828a01610bc1565b9450506060610f9a89828a01610ca8565b9350506080610fab89828a01610a21565b92505060a0610fbc89828a01610a21565b9150509295509295509295565b600080600080600080600060e0888a031215610fe457600080fd5b6000610ff28a828b01610bd6565b97505060206110038a828b01610bd6565b96505060406110148a828b01610cbd565b95505060606110258a828b01610a36565b94505060806110368a828b01610a36565b93505060a06110478a828b01610beb565b92505060c088015167ffffffffffffffff81111561106457600080fd5b6110708a828b01610c00565b91505092959891949750929550565b600061108b838361110b565b60208301905092915050565b60006110a38383611374565b60208301905092915050565b60006110bb8383611392565b60208301905092915050565b60006110d383836113b0565b60208301905092915050565b60006110eb83836113bf565b905092915050565b60006110ff8383611480565b60208301905092915050565b611114816118d4565b82525050565b611123816118d4565b82525050565b6000611134826117a6565b61113e818561184c565b935061114983611746565b8060005b8381101561117a578151611161888261107f565b975061116c836117fe565b92505060018101905061114d565b5085935050505092915050565b6000611192826117b1565b61119c818561185d565b93506111a783611756565b8060005b838110156111d85781516111bf8882611097565b97506111ca8361180b565b9250506001810190506111ab565b5085935050505092915050565b60006111f0826117bc565b6111fa818561186e565b935061120583611766565b8060005b8381101561123657815161121d88826110af565b975061122883611818565b925050600181019050611209565b5085935050505092915050565b600061124e826117c7565b611258818561187f565b935061126383611776565b8060005b8381101561129457815161127b88826110c7565b975061128683611825565b925050600181019050611267565b5085935050505092915050565b60006112ac826117d2565b6112b68185611890565b9350836020820285016112c885611786565b8060005b8581101561130457848403895281516112e585826110df565b94506112f083611832565b925060208a019950506001810190506112cc565b50829750879550505050505092915050565b6000611321826117dd565b61132b81856118a1565b935061133683611796565b8060005b8381101561136757815161134e88826110f3565b97506113598361183f565b92505060018101905061133a565b5085935050505092915050565b61137d816118e6565b82525050565b61138c816118e6565b82525050565b61139b816118f2565b82525050565b6113aa816118f2565b82525050565b6113b9816118fc565b82525050565b60006113ca826117e8565b6113d481856118b2565b93506113e4818560208601611976565b6113ed816119a9565b840191505092915050565b61140181611952565b82525050565b6000611412826117f3565b61141c81856118c3565b935061142c818560208601611976565b611435816119a9565b840191505092915050565b600061144d601f836118c3565b91507f506172616d65746572206c656e67746873206d75737420626520657175616c006000830152602082019050919050565b61148981611948565b82525050565b61149881611948565b82525050565b60006060820190506114b3600083018661111a565b81810360208301526114c58185611407565b90506114d4604083018461148f565b949350505050565b600060208201905081810360008301526114f68184611187565b905092915050565b600060e0820190508181036000830152611518818a6111e5565b9050818103602083015261152c81896111e5565b905081810360408301526115408188611316565b905081810360608301526115548187611129565b905081810360808301526115688186611129565b905081810360a083015261157c8185611243565b905081810360c083015261159081846112a1565b905098975050505050505050565b60006020820190506115b36000830184611383565b92915050565b60006020820190506115ce60008301846113a1565b92915050565b60006040820190506115e960008301856113a1565b6115f660208301846113a1565b9392505050565b600060c08201905061161260008301896113a1565b61161f60208301886113a1565b61162c60408301876113a1565b611639606083018661148f565b611646608083018561111a565b61165360a083018461111a565b979650505050505050565b600060208201905061167360008301846113f8565b92915050565b6000602082019050818103600083015261169281611440565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156116bc57600080fd5b8060405250919050565b600067ffffffffffffffff8211156116dd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561170557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561173157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006118df82611928565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061195d82611964565b9050919050565b600061196f82611928565b9050919050565b60005b83811015611994578082015181840152602081019050611979565b838111156119a3576000848401525b50505050565b6000601f19601f8301169050919050565b6119c3816118d4565b81146119ce57600080fd5b50565b6119da816118e6565b81146119e557600080fd5b50565b6119f1816118f2565b81146119fc57600080fd5b50565b611a08816118fc565b8114611a1357600080fd5b50565b611a1f81611948565b8114611a2a57600080fd5b5056fea2646970667358221220400dbd7ec698a0e843b8c2e0a326de0afc09ff6675d0373926eec221492171b564736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806376428c9b1461005c578063824240d114610092578063a36ff4d8146100c4578063ccd76101146100e2578063d760710614610112575b600080fd5b61007660048036038101906100719190610d90565b610142565b60405161008997969594939291906114fe565b60405180910390f35b6100ac60048036038101906100a79190610dfe565b61058b565b6040516100bb9392919061149e565b60405180910390f35b6100cc610652565b6040516100d9919061165e565b60405180910390f35b6100fc60048036038101906100f79190610f40565b610676565b604051610109919061159e565b60405180910390f35b61012c60048036038101906101279190610e27565b61088b565b60405161013991906114dc565b60405180910390f35b60608060608060608060608888905067ffffffffffffffff8111801561016757600080fd5b506040519080825280602002602001820160405280156101965781602001602082028036833780820191505090505b5096508888905067ffffffffffffffff811180156101b357600080fd5b506040519080825280602002602001820160405280156101e25781602001602082028036833780820191505090505b5095508888905067ffffffffffffffff811180156101ff57600080fd5b5060405190808252806020026020018201604052801561022e5781602001602082028036833780820191505090505b5094508888905067ffffffffffffffff8111801561024b57600080fd5b5060405190808252806020026020018201604052801561027a5781602001602082028036833780820191505090505b5093508888905067ffffffffffffffff8111801561029757600080fd5b506040519080825280602002602001820160405280156102c65781602001602082028036833780820191505090505b5092508888905067ffffffffffffffff811180156102e357600080fd5b506040519080825280602002602001820160405280156103125781602001602082028036833780820191505090505b5091508888905067ffffffffffffffff8111801561032f57600080fd5b5060405190808252806020026020018201604052801561036357816020015b606081526020019060019003908161034e5790505b50905060005b8989905081101561057e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639757739b8b8b848181106103bc57fe5b905060200201356040518263ffffffff1660e01b81526004016103df91906115b9565b60006040518083038186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104349190610fc9565b8e888151811061044057fe5b602002602001018e898151811061045357fe5b602002602001018e8a8151811061046657fe5b602002602001018e8b8151811061047957fe5b602002602001018e8c8151811061048c57fe5b602002602001018e8d8151811061049f57fe5b602002602001018e8e815181106104b257fe5b60200260200101879052877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152508773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250878152508781525087815250505050505050508080600101915050610369565b5092959891949750929550565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166333c0950a856040518263ffffffff1660e01b81526004016105eb91906115b9565b60006040518083038186803b15801561060357600080fd5b505afa158015610617573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106409190610cfb565b80935081945050504390509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dfd22ded89886040518363ffffffff1660e01b81526004016106d59291906115d4565b60006040518083038186803b1580156106ed57600080fd5b505afa158015610701573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061072a9190610d4f565b9050600081519050600081141561074657600092505050610881565b60006001905060005b8281101561087957600084828151811061076557fe5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c15782156107b857600195505050505050610881565b6001925061086b565b821561086a5760008190508073ffffffffffffffffffffffffffffffffffffffff16639bb014288d8f8e8e8e8e6040518763ffffffff1660e01b815260040161080f969594939291906115fd565b60206040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610dd5565b61086857600093505b505b5b50808060010191505061074f565b508093505050505b9695505050505050565b6060888890508b8b90501480156108a75750868690508b8b9050145b80156108b85750848490508b8b9050145b80156108c95750828290508b8b9050145b610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611679565b60405180910390fd5b8a8a905067ffffffffffffffff8111801561092257600080fd5b506040519080825280602002602001820160405280156109515781602001602082028036833780820191505090505b50905060005b8b8b9050811015610a11576109e68d8d8d8481811061097257fe5b905060200201358c8c8581811061098557fe5b905060200201358b8b8681811061099857fe5b905060200201358a8a878181106109ab57fe5b90506020020160208101906109c09190610cd2565b8989888181106109cc57fe5b90506020020160208101906109e19190610cd2565b610676565b8282815181106109f257fe5b6020026020010190151590811515815250508080600101915050610957565b509b9a5050505050505050505050565b600081359050610a30816119ba565b92915050565b600081519050610a45816119ba565b92915050565b60008083601f840112610a5d57600080fd5b8235905067ffffffffffffffff811115610a7657600080fd5b602083019150836020820283011115610a8e57600080fd5b9250929050565b600082601f830112610aa657600080fd5b8151610ab9610ab4826116c6565b611699565b91508181835260208401935060208101905083856020840282011115610ade57600080fd5b60005b83811015610b0e5781610af48882610a36565b845260208401935060208301925050600181019050610ae1565b5050505092915050565b60008083601f840112610b2a57600080fd5b8235905067ffffffffffffffff811115610b4357600080fd5b602083019150836020820283011115610b5b57600080fd5b9250929050565b60008083601f840112610b7457600080fd5b8235905067ffffffffffffffff811115610b8d57600080fd5b602083019150836020820283011115610ba557600080fd5b9250929050565b600081519050610bbb816119d1565b92915050565b600081359050610bd0816119e8565b92915050565b600081519050610be5816119e8565b92915050565b600081519050610bfa816119ff565b92915050565b600082601f830112610c1157600080fd5b8151610c24610c1f826116ee565b611699565b91508082526020830160208301858383011115610c4057600080fd5b610c4b838284611976565b50505092915050565b600082601f830112610c6557600080fd5b8151610c78610c738261171a565b611699565b91508082526020830160208301858383011115610c9457600080fd5b610c9f838284611976565b50505092915050565b600081359050610cb781611a16565b92915050565b600081519050610ccc81611a16565b92915050565b600060208284031215610ce457600080fd5b6000610cf284828501610a21565b91505092915050565b60008060408385031215610d0e57600080fd5b6000610d1c85828601610a36565b925050602083015167ffffffffffffffff811115610d3957600080fd5b610d4585828601610c54565b9150509250929050565b600060208284031215610d6157600080fd5b600082015167ffffffffffffffff811115610d7b57600080fd5b610d8784828501610a95565b91505092915050565b60008060208385031215610da357600080fd5b600083013567ffffffffffffffff811115610dbd57600080fd5b610dc985828601610b18565b92509250509250929050565b600060208284031215610de757600080fd5b6000610df584828501610bac565b91505092915050565b600060208284031215610e1057600080fd5b6000610e1e84828501610bc1565b91505092915050565b600080600080600080600080600080600060c08c8e031215610e4857600080fd5b6000610e568e828f01610bc1565b9b505060208c013567ffffffffffffffff811115610e7357600080fd5b610e7f8e828f01610b18565b9a509a505060408c013567ffffffffffffffff811115610e9e57600080fd5b610eaa8e828f01610b18565b985098505060608c013567ffffffffffffffff811115610ec957600080fd5b610ed58e828f01610b62565b965096505060808c013567ffffffffffffffff811115610ef457600080fd5b610f008e828f01610a4b565b945094505060a08c013567ffffffffffffffff811115610f1f57600080fd5b610f2b8e828f01610a4b565b92509250509295989b509295989b9093969950565b60008060008060008060c08789031215610f5957600080fd5b6000610f6789828a01610bc1565b9650506020610f7889828a01610bc1565b9550506040610f8989828a01610bc1565b9450506060610f9a89828a01610ca8565b9350506080610fab89828a01610a21565b92505060a0610fbc89828a01610a21565b9150509295509295509295565b600080600080600080600060e0888a031215610fe457600080fd5b6000610ff28a828b01610bd6565b97505060206110038a828b01610bd6565b96505060406110148a828b01610cbd565b95505060606110258a828b01610a36565b94505060806110368a828b01610a36565b93505060a06110478a828b01610beb565b92505060c088015167ffffffffffffffff81111561106457600080fd5b6110708a828b01610c00565b91505092959891949750929550565b600061108b838361110b565b60208301905092915050565b60006110a38383611374565b60208301905092915050565b60006110bb8383611392565b60208301905092915050565b60006110d383836113b0565b60208301905092915050565b60006110eb83836113bf565b905092915050565b60006110ff8383611480565b60208301905092915050565b611114816118d4565b82525050565b611123816118d4565b82525050565b6000611134826117a6565b61113e818561184c565b935061114983611746565b8060005b8381101561117a578151611161888261107f565b975061116c836117fe565b92505060018101905061114d565b5085935050505092915050565b6000611192826117b1565b61119c818561185d565b93506111a783611756565b8060005b838110156111d85781516111bf8882611097565b97506111ca8361180b565b9250506001810190506111ab565b5085935050505092915050565b60006111f0826117bc565b6111fa818561186e565b935061120583611766565b8060005b8381101561123657815161121d88826110af565b975061122883611818565b925050600181019050611209565b5085935050505092915050565b600061124e826117c7565b611258818561187f565b935061126383611776565b8060005b8381101561129457815161127b88826110c7565b975061128683611825565b925050600181019050611267565b5085935050505092915050565b60006112ac826117d2565b6112b68185611890565b9350836020820285016112c885611786565b8060005b8581101561130457848403895281516112e585826110df565b94506112f083611832565b925060208a019950506001810190506112cc565b50829750879550505050505092915050565b6000611321826117dd565b61132b81856118a1565b935061133683611796565b8060005b8381101561136757815161134e88826110f3565b97506113598361183f565b92505060018101905061133a565b5085935050505092915050565b61137d816118e6565b82525050565b61138c816118e6565b82525050565b61139b816118f2565b82525050565b6113aa816118f2565b82525050565b6113b9816118fc565b82525050565b60006113ca826117e8565b6113d481856118b2565b93506113e4818560208601611976565b6113ed816119a9565b840191505092915050565b61140181611952565b82525050565b6000611412826117f3565b61141c81856118c3565b935061142c818560208601611976565b611435816119a9565b840191505092915050565b600061144d601f836118c3565b91507f506172616d65746572206c656e67746873206d75737420626520657175616c006000830152602082019050919050565b61148981611948565b82525050565b61149881611948565b82525050565b60006060820190506114b3600083018661111a565b81810360208301526114c58185611407565b90506114d4604083018461148f565b949350505050565b600060208201905081810360008301526114f68184611187565b905092915050565b600060e0820190508181036000830152611518818a6111e5565b9050818103602083015261152c81896111e5565b905081810360408301526115408188611316565b905081810360608301526115548187611129565b905081810360808301526115688186611129565b905081810360a083015261157c8185611243565b905081810360c083015261159081846112a1565b905098975050505050505050565b60006020820190506115b36000830184611383565b92915050565b60006020820190506115ce60008301846113a1565b92915050565b60006040820190506115e960008301856113a1565b6115f660208301846113a1565b9392505050565b600060c08201905061161260008301896113a1565b61161f60208301886113a1565b61162c60408301876113a1565b611639606083018661148f565b611646608083018561111a565b61165360a083018461111a565b979650505050505050565b600060208201905061167360008301846113f8565b92915050565b6000602082019050818103600083015261169281611440565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156116bc57600080fd5b8060405250919050565b600067ffffffffffffffff8211156116dd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561170557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561173157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006118df82611928565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061195d82611964565b9050919050565b600061196f82611928565b9050919050565b60005b83811015611994578082015181840152602081019050611979565b838111156119a3576000848401525b50505050565b6000601f19601f8301169050919050565b6119c3816118d4565b81146119ce57600080fd5b50565b6119da816118e6565b81146119e557600080fd5b50565b6119f1816118f2565b81146119fc57600080fd5b50565b611a08816118fc565b8114611a1357600080fd5b50565b611a1f81611948565b8114611a2a57600080fd5b5056fea2646970667358221220400dbd7ec698a0e843b8c2e0a326de0afc09ff6675d0373926eec221492171b564736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkAuthorizationStatus(bytes32,bytes32,bytes32,uint256,address,address)": {
        "details": "Authorizer contracts are not trusted, so this method should only be called off-chain. The elements of the authorizer array are either addresses of Authorizer contracts with the interface defined in IAuthorizer or 0. Say we have authorizer contracts X, Y, Z, T, and our authorizer array is [X, Y, 0, Z, T]. This means that the requester should satisfy (X AND Y) OR (Z AND T) to be considered authorized. In other words, consequent authorizer contracts need to verify authorization simultaneously, while 0 represents the start of an independent authorization policy. From a logical standpoint, consequent authorizers get ANDed while 0 acts as an OR gate, providing great flexibility in forming an authorization policy out of simple building blocks. We could also define a NOT gate here to achieve a full set of universal logic gates, but that does not make much sense in this context because authorizers tend to check for positive conditions (have paid, is whitelisted, etc.) and we would not need policies that require these to be false. Note that authorizers should not start or end with 0, and 0s should not be used consecutively (e.g., [X, Y, 0, 0, Z, T]). [] returns false (deny everyone), [0] returns true (accept everyone).",
        "params": {
          "clientAddress": "Client address",
          "designatedWallet": "Designated wallet",
          "endpointId": "Endpoint ID from EndpointStore",
          "providerId": "Provider ID from ProviderStore",
          "requestId": "Request ID",
          "requesterInd": "Requester index from RequesterStore"
        },
        "returns": {
          "status": "Authorization status of the request"
        }
      },
      "checkAuthorizationStatuses(bytes32,bytes32[],bytes32[],uint256[],address[],address[])": {
        "params": {
          "clientAddresses": "Client addresses",
          "designatedWallets": "Designated wallets",
          "endpointIds": "Endpoint IDs from EndpointStore",
          "providerId": "Provider ID from ProviderStore",
          "requestIds": "Request IDs",
          "requesterInds": "Requester indices from RequesterStore"
        },
        "returns": {
          "statuses": "Authorization statuses of the request"
        }
      },
      "getProviderAndBlockNumber(bytes32)": {
        "params": {
          "providerId": "Provider ID"
        },
        "returns": {
          "admin": "Provider admin",
          "blockNumber": "Block number",
          "xpub": "Master public key of the provider node"
        }
      },
      "getTemplates(bytes32[])": {
        "params": {
          "templateIds": "Request template IDs"
        },
        "returns": {
          "designatedWallets": "Designated wallets that are requested to fulfill the request",
          "endpointIds": "Endpoint IDs from EndpointStore",
          "fulfillAddresses": "Addresses that will be called to fulfill",
          "fulfillFunctionIds": "Signatures of the functions that will be called to fulfill",
          "parameters": "Array of static request parameters (i.e., parameters that will not change between requests, unlike the dynamic parameters determined at runtime)",
          "providerIds": "Provider IDs from ProviderStore",
          "requesterInds": "Requester indices from RequesterStore"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkAuthorizationStatus(bytes32,bytes32,bytes32,uint256,address,address)": {
        "notice": "Uses the authorizer contracts of an endpoint of a provider to decide if a client contract is authorized to call the endpoint. Once an oracle node receives a request, it calls this method to determine if it should respond. Similarly, third parties can use this method to determine if a client contract is authorized to call an endpoint."
      },
      "checkAuthorizationStatuses(bytes32,bytes32[],bytes32[],uint256[],address[],address[])": {
        "notice": "A convenience function to make multiple authorization status checks with a single call"
      },
      "getProviderAndBlockNumber(bytes32)": {
        "notice": "A convenience function to retrieve provider parameters and the block number with a single call"
      },
      "getTemplates(bytes32[])": {
        "notice": "A convenience function to retrieve multiple templates with a single call"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 496,
        "contract": "contracts/Convenience.sol:Convenience",
        "label": "airnode",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IAirnode)1818"
      }
    ],
    "types": {
      "t_contract(IAirnode)1818": {
        "encoding": "inplace",
        "label": "contract IAirnode",
        "numberOfBytes": "20"
      }
    }
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "1351000",
      "executionCost": "infinite",
      "totalCost": "infinite"
    },
    "external": {
      "airnode()": "1276",
      "checkAuthorizationStatus(bytes32,bytes32,bytes32,uint256,address,address)": "infinite",
      "checkAuthorizationStatuses(bytes32,bytes32[],bytes32[],uint256[],address[],address[])": "infinite",
      "getProviderAndBlockNumber(bytes32)": "infinite",
      "getTemplates(bytes32[])": "infinite"
    }
  }
}